{"id": "j-KRmLy_Ig8", "snippet": {"title": "COMPUTER SPACE - NTSC/PAL; using FPGA", "description": "Implementation of world's first commercial arcade video game - Computer Space - using FPGA/VHDL with Terasic/Altera DE2 development board with the Cyclone II fpga chip.\n\nI have tried to stay true to the original schematics as much as possible to provide original gaming experience (acceleration, speed, responsiveness, saucer missile AI etc). Schematics can be found at computerspacefan.com. However, they hold quite a few errors so it is not a like for like copy. The game also have some analogue timing components that I had to emulate with counters; which are probably not 100% exact; but can easily be trimmed.\n\nIn the video sequence I manage to win my initial gaming session and enter \"hyper space\" - only because the saucers have so many hits on me that their score counter starts over with zero again - part of original game design. Also, a bit into the hyper space part you can see how the rocket's score does not move from 9 to 0, but instead produces strange character sets. This is also part of original game design; related to the use of a binary counter (7493) instead of a decade counter (7490).\n\nVideo output is done as composite NTSC/PAL video (black & white) - but there is also a VGA variant. The NTSC/PAL requires an additional break out with 2 resistors to merge  sync signal and video signal (and convert from digital 0v / 3.3 v to 0v for sync, 0.7v for black and 1v for white).\n\nSounds are sampled from a real Computer Space console, as the original game has a complete analogue solution which cannot be replicated on the DE2. Sound samples are stored on flash memory and fed via DE2s audio CODEC chip.\n\nControl panel is external - with buttons for rotate, thrust and fire.\n\nI believe the solution should also work for terasic/altera de1 - which is a less costly board but still has an audio codec chip.\n\nI had no previous experience with fpga, audio codec chip controlling, ntsc/pal video controlling and very limited knowledge of digital and analogue circuits - so this was a fun learning experience. But best of all - I learnt about the original game design. Very clever - using diode matrixes as primitive ROMs and being able to rotate images into 32 positions using only four original 16x16. Quite a feat considering this was done in 1971.", "thumbnails": {"default": {"url": "https://i.ytimg.com/vi/j-KRmLy_Ig8/default.jpg", "width": 120, "height": 90}, "medium": {"url": "https://i.ytimg.com/vi/j-KRmLy_Ig8/mqdefault.jpg", "width": 320, "height": 180}, "high": {"url": "https://i.ytimg.com/vi/j-KRmLy_Ig8/hqdefault.jpg", "width": 480, "height": 360}, "standard": {"url": "https://i.ytimg.com/vi/j-KRmLy_Ig8/sddefault.jpg", "width": 640, "height": 480}}, "localized": {"title": "COMPUTER SPACE - NTSC/PAL; using FPGA", "description": "Implementation of world's first commercial arcade video game - Computer Space - using FPGA/VHDL with Terasic/Altera DE2 development board with the Cyclone II fpga chip.\n\nI have tried to stay true to the original schematics as much as possible to provide original gaming experience (acceleration, speed, responsiveness, saucer missile AI etc). Schematics can be found at computerspacefan.com. However, they hold quite a few errors so it is not a like for like copy. The game also have some analogue timing components that I had to emulate with counters; which are probably not 100% exact; but can easily be trimmed.\n\nIn the video sequence I manage to win my initial gaming session and enter \"hyper space\" - only because the saucers have so many hits on me that their score counter starts over with zero again - part of original game design. Also, a bit into the hyper space part you can see how the rocket's score does not move from 9 to 0, but instead produces strange character sets. This is also part of original game design; related to the use of a binary counter (7493) instead of a decade counter (7490).\n\nVideo output is done as composite NTSC/PAL video (black & white) - but there is also a VGA variant. The NTSC/PAL requires an additional break out with 2 resistors to merge  sync signal and video signal (and convert from digital 0v / 3.3 v to 0v for sync, 0.7v for black and 1v for white).\n\nSounds are sampled from a real Computer Space console, as the original game has a complete analogue solution which cannot be replicated on the DE2. Sound samples are stored on flash memory and fed via DE2s audio CODEC chip.\n\nControl panel is external - with buttons for rotate, thrust and fire.\n\nI believe the solution should also work for terasic/altera de1 - which is a less costly board but still has an audio codec chip.\n\nI had no previous experience with fpga, audio codec chip controlling, ntsc/pal video controlling and very limited knowledge of digital and analogue circuits - so this was a fun learning experience. But best of all - I learnt about the original game design. Very clever - using diode matrixes as primitive ROMs and being able to rotate images into 32 positions using only four original 16x16. Quite a feat considering this was done in 1971."}}}